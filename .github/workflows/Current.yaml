name: Test Current

on:
  workflow_dispatch:

defaults:
  run:
    shell: PowerShell

jobs:
  Initialization:
    runs-on: [ windows-latest ]
    outputs:
      telemetryScopeJson: ${{ steps.init.outputs.telemetryScopeJson }}
    steps:
      - id: init
        uses: freddydk/AL-Go-Actions/WorkflowInitialize@main
        with:
          eventId: "DO0100"

  Analyze:
    runs-on: [ windows-latest ]
    needs: [ Initialization ]
    outputs:
      settings: ${{ steps.ReadSettings.outputs.SettingsJson }}
      projects: ${{ steps.ReadSettings.outputs.ProjectsJson }}
      projectCount: ${{ steps.ReadSettings.outputs.ProjectCount }}
      githubRunner: ${{ steps.ReadSettings.outputs.GitHubRunnerJson }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read settings
        id: ReadSettings
        uses: freddydk/AL-Go-Actions/ReadSettings@main
        with:
          parentTelemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}
          getProjects: 'Y'

  Build:
    needs: [ Analyze ]
    runs-on: ${{ fromJson(needs.Analyze.outputs.githubRunner) }}
    strategy:
      matrix:
        project: ${{ fromJson(needs.Analyze.outputs.projects) }}
      fail-fast: false
    name: Build ${{ matrix.project }}
    outputs:
      TestResultsArtifactsName: ${{ steps.calculateArtifactNames.outputs.TestResultsArtifactsName }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read settings
        uses: freddydk/AL-Go-Actions/ReadSettings@main
        with:
          parentTelemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}
          project: ${{ matrix.project }}

      - name: Read secrets
        uses: freddydk/AL-Go-Actions/ReadSecrets@main
        env:
          secrets: ${{ toJson(secrets) }}
        with:
          parentTelemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}
          settingsJson: ${{ env.Settings }}
          secrets: 'licenseFileUrl,insiderSasToken,CodeSignCertificateUrl,CodeSignCertificatePassword,KeyVaultCertificateUrl,KeyVaultCertificatePassword,KeyVaultClientId'

      - name: Run pipeline
        uses: freddydk/AL-Go-Actions/RunPipeline@main
        with:
          parentTelemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}
          Project: ${{ matrix.project }}
          settingsJson: ${{ env.Settings }}
          SecretsJson: ${{ env.RepoSecrets }}

      - name: Calculate Artifact names
        id: calculateArtifactNames
        if: success() || failure()
        run: |
          $settings = '${{ env.Settings }}' | ConvertFrom-Json
          $project = '${{ matrix.project }}'
          if ($project -eq ".") { $project = $settings.RepoName }
          $TestResultsArtifactsName = "$project-TestResults"
          Write-Host "::set-output name=TestResultsArtifactsName::$TestResultsArtifactsName"
          Add-Content -Path $env:GITHUB_ENV -Value "TestResultsArtifactsName=$TestResultsArtifactsName"

      - name: Publish artifacts - test results
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: ${{ env.testResultsArtifactsName }}
          path: '${{ matrix.project }}/TestResults.xml'
          if-no-files-found: ignore

      - name: Cleanup
        if: always()
        uses: freddydk/AL-Go-Actions/PipelineCleanup@main
        with:
          parentTelemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}
          Project: ${{ matrix.project }}

  PostProcess:
    if: always()
    runs-on: [ windows-latest ]
    needs: [ Initialization,  Analyze, Build ]
    steps:
      - name: Finalizing the workflow
        id: PostProcess
        uses: freddydk/AL-Go-Actions/WorkflowPostProcess@main
        with:
          eventId: "DO0100"
          telemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}


