name: ' Publish To AppSource'

on:
  workflow_dispatch:
    inputs:
      appVersion:
        description: App version to deliver to AppSource (current, prerelease, draft, latest or version number)
        required: false
        default: 'current'
      GoLive:
        description: Promote AppSource App to go live if it passes technical validation? (Y/N)
        required: false
        default: 'N'

permissions:
  contents: read
  actions: read

defaults:
  run:
    shell: pwsh

jobs:
  Initialization:
    runs-on: [ ubuntu-latest ]
    outputs:
      telemetryScopeJson: ${{ steps.init.outputs.telemetryScopeJson }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialize the workflow
        id: init
        uses: freddydk/AL-Go-Actions/WorkflowInitialize@main
        with:
          shell: pwsh
          eventId: "DO0103"

  Deliver:
    needs: [ Initialization ]
    runs-on: [ ubuntu-latest ]
    name: Deliver to AppSource
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Read settings
        uses: freddydk/AL-Go-Actions/ReadSettings@main
        with:
          shell: pwsh
          parentTelemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}

      - name: Read secrets
        uses: freddydk/AL-Go-Actions/ReadSecrets@main
        env:
          secrets: ${{ toJson(secrets) }}
        with:
          shell: pwsh
          settingsJson: ${{ env.Settings }}
          secrets: 'appSourceContext'

      - name: DeliveryContext
        id: deliveryContext
        run: |
          $ErrorActionPreference = "STOP"
          Set-StrictMode -version 2.0
          $contextName = 'appSourceContext'
          $deliveryContext = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String([System.Environment]::GetEnvironmentVariable($contextName)))
          Add-Content -Path $env:GITHUB_OUTPUT -Value "deliveryContext=$deliveryContext"
          Write-Host "deliveryContext=$deliveryContext"

      - name: Deliver
        uses: freddydk/AL-Go-Actions/Deliver@main
        env:
          deliveryContext: '${{ steps.deliveryContext.outputs.deliveryContext }}'
        with:
          shell: pwsh
          parentTelemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}
          type: 'Release'
          projects: '*'
          deliveryTarget: 'AppSource'
          artifacts: ${{ github.event.inputs.appVersion }}
          goLive: ${{ github.event.inputs.goLive }}

  PostProcess:
    if: always()
    runs-on: [ ubuntu-latest ]
    needs: [ Initialization, Deliver ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Finalize the workflow
        id: PostProcess
        uses: freddydk/AL-Go-Actions/WorkflowPostProcess@main
        with:
          shell: pwsh
          eventId: "DO0103"
          telemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}
